name: "Rebuild docs"
# curl command from your cmd:
# curl -XPOST -u "username:githubPAT" -H "Accept: application/vnd.github.everest-preview+json" \
# -H "Content-Type: application/json" \
# --data "{\"event_type\": \"master_doc_build\"}" \
#  https://api.github.com/repos/{{ cookiecutter.github_owner }}/{{ cookiecutter.repo_name }}/dispatches
#
# Note, this test will checkout 'dev' branch
on:
  repository_dispatch:
    # Manually trigger with curl or Postman POST
    types: [master_doc_build]
  release:
    types: # This configuration does not affect the page_build event above
      - created

jobs:
  publish-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: '{{ cookiecutter.library_name }}'
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.7'
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ "{{" }} runner.os {{ "}}" }}-pip-${{ "{{" }} hashFiles('{{ cookiecutter.library_name }}/docs/requirements.txt') {{ "}}" }}
          restore-keys: |
            ${{ "{{" }} runner.os {{ "}}" }}-pip-
      - name: Install dependencies
        working-directory: '{{ cookiecutter.library_name }}/docs'
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip py-make
          sudo apt-get install make
          pip install -r requirements.txt
      - name: Install tools in dev mode
        working-directory: '{{ cookiecutter.library_name }}'
        run: |
          make setup-dev
      - name: Build docs
        working-directory: '{{ cookiecutter.library_name }}/docs'
        run: |
          make html
      - uses: actions/checkout@v2
        with:
          ref: 'gh-pages'
          path: 'gh-pages'
      - name: Copy docs
        run: |
          cp -r {{ cookiecutter.library_name }}/docs/_build/html/* gh-pages/
          ls -al gh-pages/
      - name: Commit docs
        working-directory: 'gh-pages'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add --all .
          git commit -m "${{ "{{" }} github.event.head_commit.message {{ "}}" }}"
          eval "$(ssh-agent -s)"
          ssh-add - <<< "${{ "{{" }} secrets.DOCS_DEPLOY_KEY {{ "}}" }}"
          git push
      - name: Attach docs to release
        working-directory: '{{ cookiecutter.library_name }}'
        run: |
          zip -r {{ cookiecutter.library_name }}_docs.zip docs/_build/html
      - name: Upload Docs as Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ "{{" }} secrets.GITHUB_TOKEN {{ "}}" }}
        with:
          upload_url: ${{ "{{" }} steps.create_release.outputs.upload_url {{ "}}" }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: { cookiecutter.library_name }}/{{ cookiecutter.library_name }}_docs.zip
          asset_name: {{ cookiecutter.library_name }}_docs.zip
          asset_content_type: application/zip